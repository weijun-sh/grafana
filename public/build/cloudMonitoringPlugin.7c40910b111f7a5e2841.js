"use strict";(self.webpackChunkgrafana=self.webpackChunkgrafana||[]).push([[3549],{"./public/app/plugins/datasource/cloud-monitoring/module.ts":(e,t,s)=>{s.r(t),s.d(t,{plugin:()=>Z});var r=s("./packages/grafana-data/src/index.ts");class a{constructor(e){this.annotation=e.ctrl.annotation||{},this.annotation.target=e.ctrl.annotation.target||{},this.onQueryChange=this.onQueryChange.bind(this)}onQueryChange(e){Object.assign(this.annotation.target,e)}}a.$inject=["$scope"],function(e,t,s){t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s}(a,"templateUrl","partials/annotations.editor.html");var i,n,c,l,o,u,p,d,h,y,m,g,v,j,b,S,f,T,x,Q,L,O=s("./.yarn/__virtual__/@emotion-css-virtual-72c314ddb1/0/cache/@emotion-css-npm-11.7.1-25ff8755a7-ac1f56656f.zip/node_modules/@emotion/css/dist/emotion-css.esm.js"),C=s("./.yarn/cache/react-npm-17.0.2-99ba37d931-b254cc17ce.zip/node_modules/react/index.js"),w=s("./.yarn/cache/react-npm-17.0.2-99ba37d931-b254cc17ce.zip/node_modules/react/jsx-runtime.js");var M=s("./.yarn/cache/@grafana-google-sdk-npm-0.0.3-c91663433f-9eb5e043e0.zip/node_modules/@grafana/google-sdk/index.js");var P,N=s("./public/app/plugins/datasource/cloud-monitoring/components/QueryEditor.tsx"),B=s("./packages/grafana-runtime/src/index.ts"),D=s("./public/app/plugins/datasource/cloud-monitoring/functions.ts"),R=s("./public/app/plugins/datasource/cloud-monitoring/types.ts"),F=s("./public/app/plugins/datasource/cloud-monitoring/components/index.ts");const q=["metricDescriptors","labels","metricTypes","services"];function _(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class E extends C.PureComponent{constructor(e){super(e),_(this,"queryTypes",[{value:R.Bp.Projects,label:"Projects"},{value:R.Bp.Services,label:"Services"},{value:R.Bp.MetricTypes,label:"Metric Types"},{value:R.Bp.LabelKeys,label:"Label Keys"},{value:R.Bp.LabelValues,label:"Label Values"},{value:R.Bp.ResourceTypes,label:"Resource Types"},{value:R.Bp.Aggregations,label:"Aggregations"},{value:R.Bp.Aligners,label:"Aligners"},{value:R.Bp.AlignmentPeriods,label:"Alignment Periods"},{value:R.Bp.Selectors,label:"Selectors"},{value:R.Bp.SLOServices,label:"SLO Services"},{value:R.Bp.SLO,label:"Service Level Objectives (SLO)"}]),_(this,"defaults",{selectedQueryType:this.queryTypes[0].value,metricDescriptors:[],selectedService:"",selectedMetricType:"",labels:[],labelKey:"",metricTypes:[],services:[],sloServices:[],selectedSLOService:"",projects:[],projectName:"",loading:!0}),_(this,"onPropsChange",()=>{const e=function(e,t){if(null==e)return{};var s,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)s=i[r],t.indexOf(s)>=0||(a[s]=e[s]);return a}(this.state,q);this.props.onChange(Object.assign({},e,{refId:"CloudMonitoringVariableQueryEditor-VariableQuery"}))}),this.state=Object.assign(this.defaults,{projectName:this.props.datasource.getDefaultProject()},this.props.query)}async componentDidMount(){const e=await this.props.datasource.getProjects(),t=await this.props.datasource.getMetricTypes(this.props.query.projectName||this.props.datasource.getDefaultProject()),s=(0,D.qA)(t).map(e=>({value:e.service,label:e.serviceShortName}));let r="";s.some(e=>e.value===(0,B.getTemplateSrv)().replace(this.state.selectedService))?r=this.state.selectedService:s&&s.length>0&&(r=s[0].value);const{metricTypes:a,selectedMetricType:i}=(0,D.FL)(t,this.state.selectedMetricType,(0,B.getTemplateSrv)().replace(this.state.selectedMetricType),(0,B.getTemplateSrv)().replace(r)),n=await this.props.datasource.getSLOServices(this.state.projectName),c=Object.assign({services:s,selectedService:r,metricTypes:a,selectedMetricType:i,metricDescriptors:t,projects:e},await this.getLabels(i,this.state.projectName),{sloServices:n,loading:!1});this.setState(c,()=>this.onPropsChange())}async onQueryTypeChange(e){const t=Object.assign({selectedQueryType:e},await this.getLabels(this.state.selectedMetricType,this.state.projectName,e));this.setState(t)}async onProjectChange(e){const t=await this.props.datasource.getMetricTypes(e),s=await this.getLabels(this.state.selectedMetricType,e),{metricTypes:r,selectedMetricType:a}=(0,D.FL)(t,this.state.selectedMetricType,(0,B.getTemplateSrv)().replace(this.state.selectedMetricType),(0,B.getTemplateSrv)().replace(this.state.selectedService)),i=await this.props.datasource.getSLOServices(e);this.setState(Object.assign({},s,{metricTypes:r,selectedMetricType:a,metricDescriptors:t,projectName:e,sloServices:i}),()=>this.onPropsChange())}async onServiceChange(e){const{metricTypes:t,selectedMetricType:s}=(0,D.FL)(this.state.metricDescriptors,this.state.selectedMetricType,(0,B.getTemplateSrv)().replace(this.state.selectedMetricType),(0,B.getTemplateSrv)().replace(e)),r=Object.assign({selectedService:e,metricTypes:t,selectedMetricType:s},await this.getLabels(s,this.state.projectName));this.setState(r,()=>this.onPropsChange())}async onMetricTypeChange(e){const t=Object.assign({selectedMetricType:e},await this.getLabels(e,this.state.projectName));this.setState(t,()=>this.onPropsChange())}onLabelKeyChange(e){this.setState({labelKey:e},()=>this.onPropsChange())}componentDidUpdate(e,t){const s=t.selectedQueryType!==this.state.selectedQueryType,r=this.state.selectedSLOService!==t.selectedSLOService;(s||r)&&this.onPropsChange()}async getLabels(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.state.selectedQueryType,r={labels:this.state.labels,labelKey:this.state.labelKey};if(e&&s===R.Bp.LabelValues){const s=await(0,D.Qd)(this.props.datasource,e,t);r={labels:s,labelKey:s.some(e=>e===(0,B.getTemplateSrv)().replace(this.state.labelKey))?this.state.labelKey:s[0]}}return r}renderQueryTypeSwitch(e){const t={label:"Template Variables",expanded:!1,options:(0,B.getTemplateSrv)().getVariables().map(e=>({value:`$${e.name}`,label:`$${e.name}`}))};switch(e){case R.Bp.MetricTypes:return(0,w.jsxs)(w.Fragment,{children:[(0,w.jsx)(F.Th,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:e=>this.onProjectChange(e),label:"Project"}),(0,w.jsx)(F.Th,{value:this.state.selectedService,options:[t,...this.state.services],onChange:e=>this.onServiceChange(e),label:"Service"})]});case R.Bp.LabelKeys:case R.Bp.LabelValues:case R.Bp.ResourceTypes:return(0,w.jsxs)(w.Fragment,{children:[(0,w.jsx)(F.Th,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:e=>this.onProjectChange(e),label:"Project"}),(0,w.jsx)(F.Th,{value:this.state.selectedService,options:[t,...this.state.services],onChange:e=>this.onServiceChange(e),label:"Service"}),(0,w.jsx)(F.Th,{value:this.state.selectedMetricType,options:[t,...this.state.metricTypes.map(e=>{let{value:t,name:s}=e;return{value:t,label:s}})],onChange:e=>this.onMetricTypeChange(e),label:"Metric Type"}),e===R.Bp.LabelValues&&(0,w.jsx)(F.Th,{value:this.state.labelKey,options:[t,...this.state.labels.map(e=>({value:e,label:e}))],onChange:e=>this.onLabelKeyChange(e),label:"Label Key"})]});case R.Bp.Aligners:case R.Bp.Aggregations:return(0,w.jsxs)(w.Fragment,{children:[(0,w.jsx)(F.Th,{value:this.state.selectedService,options:[t,...this.state.services],onChange:e=>this.onServiceChange(e),label:"Service"}),(0,w.jsx)(F.Th,{value:this.state.selectedMetricType,options:[t,...this.state.metricTypes.map(e=>{let{value:t,name:s}=e;return{value:t,label:s}})],onChange:e=>this.onMetricTypeChange(e),label:"Metric Type"})]});case R.Bp.SLOServices:return(0,w.jsx)(w.Fragment,{children:(0,w.jsx)(F.Th,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:e=>this.onProjectChange(e),label:"Project"})});case R.Bp.SLO:return(0,w.jsxs)(w.Fragment,{children:[(0,w.jsx)(F.Th,{allowCustomValue:!0,value:this.state.projectName,options:[t,...this.state.projects],onChange:e=>this.onProjectChange(e),label:"Project"}),(0,w.jsx)(F.Th,{value:this.state.selectedSLOService,options:[t,...this.state.sloServices],onChange:e=>{this.setState(Object.assign({},this.state,{selectedSLOService:e}))},label:"SLO Service"})]});default:return""}}render(){return this.state.loading?P||(P=(0,w.jsxs)("div",{className:"gf-form max-width-21",children:[(0,w.jsx)("span",{className:"gf-form-label width-10 query-keyword",children:"Query Type"}),(0,w.jsx)("div",{className:"gf-form-select-wrapper max-width-12",children:(0,w.jsx)("select",{className:"gf-form-input",children:(0,w.jsx)("option",{children:"Loading..."})})})]})):(0,w.jsxs)(w.Fragment,{children:[(0,w.jsx)(F.Th,{value:this.state.selectedQueryType,options:this.queryTypes,onChange:e=>this.onQueryTypeChange(e),label:"Query Type"}),this.renderQueryTypeSwitch(this.state.selectedQueryType)]})}}var V=s("./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js"),A=s("./.yarn/cache/rxjs-npm-7.5.5-d0546b1ccb-e034f60805.zip/node_modules/rxjs/dist/esm5/internal/lastValueFrom.js"),k=s("./.yarn/cache/rxjs-npm-7.5.5-d0546b1ccb-e034f60805.zip/node_modules/rxjs/dist/esm5/internal/observable/of.js"),K=s("./.yarn/cache/rxjs-npm-7.5.5-d0546b1ccb-e034f60805.zip/node_modules/rxjs/dist/esm5/internal/observable/from.js"),I=s("./.yarn/cache/rxjs-npm-7.5.5-d0546b1ccb-e034f60805.zip/node_modules/rxjs/dist/esm5/internal/operators/map.js"),$=s("./.yarn/cache/rxjs-npm-7.5.5-d0546b1ccb-e034f60805.zip/node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),z=s("./public/app/features/dashboard/services/TimeSrv.ts"),U=s("./public/app/features/templating/template_srv.ts"),G=s("./public/app/plugins/datasource/cloud-monitoring/constants.ts");class H{constructor(e){this.datasource=e,this.datasource=e}async execute(e){try{switch(e.projectName||(e.projectName=this.datasource.getDefaultProject()),e.selectedQueryType){case R.Bp.Projects:return this.handleProjectsQuery();case R.Bp.Services:return this.handleServiceQuery(e);case R.Bp.MetricTypes:return this.handleMetricTypesQuery(e);case R.Bp.LabelKeys:return this.handleLabelKeysQuery(e);case R.Bp.LabelValues:return this.handleLabelValuesQuery(e);case R.Bp.ResourceTypes:return this.handleResourceTypeQuery(e);case R.Bp.Aligners:return this.handleAlignersQuery(e);case R.Bp.AlignmentPeriods:return this.handleAlignmentPeriodQuery();case R.Bp.Aggregations:return this.handleAggregationQuery(e);case R.Bp.SLOServices:return this.handleSLOServicesQuery(e);case R.Bp.SLO:return this.handleSLOQuery(e);case R.Bp.Selectors:return this.handleSelectorQuery();default:return[]}}catch(t){return console.error(`Could not run CloudMonitoringMetricFindQuery ${e}`,t),[]}}async handleProjectsQuery(){return(await this.datasource.getProjects()).map(e=>({text:e.label,value:e.value,expandable:!0}))}async handleServiceQuery(e){let{projectName:t}=e;const s=await this.datasource.getMetricTypes(t);return(0,D.qA)(s).map(e=>({text:e.serviceShortName,value:e.service,expandable:!0}))}async handleMetricTypesQuery(e){let{selectedService:t,projectName:s}=e;if(!t)return[];const r=await this.datasource.getMetricTypes(s);return(0,D.Qf)(r,this.datasource.templateSrv.replace(t)).map(e=>({text:e.displayName,value:e.type,expandable:!0}))}async handleLabelKeysQuery(e){let{selectedMetricType:t,projectName:s}=e;if(!t)return[];return(await(0,D.Qd)(this.datasource,t,s)).map(this.toFindQueryResult)}async handleLabelValuesQuery(e){let{selectedMetricType:t,labelKey:s,projectName:r}=e;if(!t)return[];const a=await this.datasource.getLabels(t,"handleLabelValuesQuery",r,{groupBys:[s],crossSeriesReducer:"REDUCE_MEAN"}),i=this.datasource.templateSrv.replace(s);return(a.hasOwnProperty(i)?a[i]:[]).map(this.toFindQueryResult)}async handleResourceTypeQuery(e){var t,s;let{selectedMetricType:r,projectName:a}=e;if(!r)return[];return null!==(t=null===(s=(await this.datasource.getLabels(r,"handleResourceTypeQueryQueryType",a))["resource.type"])||void 0===s?void 0:s.map(this.toFindQueryResult))&&void 0!==t?t:[]}async handleAlignersQuery(e){let{selectedMetricType:t,projectName:s}=e;if(!t)return[];const r=(await this.datasource.getMetricTypes(s)).find(e=>e.type===this.datasource.templateSrv.replace(t));return r?(0,D.oU)(r.valueType,r.metricKind).map(this.toFindQueryResult):[]}async handleAggregationQuery(e){let{selectedMetricType:t,projectName:s}=e;if(!t)return[];const r=(await this.datasource.getMetricTypes(s)).find(e=>e.type===this.datasource.templateSrv.replace(t));return r?(0,D.A_)(r.valueType,r.metricKind).map(this.toFindQueryResult):[]}async handleSLOServicesQuery(e){let{projectName:t}=e;return(await this.datasource.getSLOServices(t)).map(this.toFindQueryResult)}async handleSLOQuery(e){let{selectedSLOService:t,projectName:s}=e;return(await this.datasource.getServiceLevelObjectives(s,t)).map(this.toFindQueryResult)}async handleSelectorQuery(){return G.IR.map(this.toFindQueryResult)}handleAlignmentPeriodQuery(){return G.dD.map(this.toFindQueryResult)}toFindQueryResult(e){return(0,V.isString)(e)?{text:e,expandable:!0}:Object.assign({},e,{expandable:!0})}}function W(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class J extends r.CustomVariableSupport{constructor(e){super(),this.datasource=e,W(this,"metricFindQuery",void 0),W(this,"editor",E),this.datasource=e,this.metricFindQuery=new H(e),this.query=this.query.bind(this)}query(e){const t=(0,K.D)(this.metricFindQuery.execute(e.targets[0]));return(0,K.D)(this.datasource.ensureGCEDefaultProject()).pipe((0,$.z)(()=>t),(0,I.U)(e=>({data:e})))}}const X=["hide","refId","datasource","key","queryType","maxLines","metric","intervalMs","type"];function Y(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}const Z=new r.DataSourcePlugin(class extends B.DataSourceWithBackend{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,U.J)(),s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:(0,z.$t)();super(e),this.instanceSettings=e,this.templateSrv=t,this.timeSrv=s,Y(this,"authenticationType",void 0),Y(this,"intervalMs",void 0),this.instanceSettings=e,this.templateSrv=t,this.timeSrv=s,this.authenticationType=e.jsonData.authenticationType||"jwt",this.variables=new J(this),this.intervalMs=0}getVariables(){return this.templateSrv.getVariables().map(e=>`$${e.name}`)}query(e){return e.targets=e.targets.map(t=>Object.assign({},this.migrateQuery(t),{intervalMs:e.intervalMs})),super.query(e)}async annotationQuery(e){await this.ensureGCEDefaultProject();const t=e.annotation,s=[{refId:"annotationQuery",type:"annotationQuery",datasource:this.getRef(),view:"FULL",crossSeriesReducer:"REDUCE_NONE",perSeriesAligner:"ALIGN_NONE",metricType:this.templateSrv.replace(t.target.metricType,e.scopedVars||{}),title:this.templateSrv.replace(t.target.title,e.scopedVars||{}),text:this.templateSrv.replace(t.target.text,e.scopedVars||{}),projectName:this.templateSrv.replace(t.target.projectName?t.target.projectName:this.getDefaultProject(),e.scopedVars||{}),filters:this.interpolateFilters(t.target.filters||[],e.scopedVars)}];return(0,A.n)((0,B.getBackendSrv)().fetch({url:"/api/ds/query",method:"POST",data:{from:e.range.from.valueOf().toString(),to:e.range.to.valueOf().toString(),queries:s}}).pipe((0,I.U)(e=>{let{data:s}=e;const r=(0,B.toDataQueryResponse)({data:s}),a=[];if(0!==r.data.length)for(let e=0;e<r.data.length;e++)for(let s=0;s<r.data[e].fields[0].values.length;s++)a.push({annotation:t,time:Date.parse(r.data[e].fields[0].values.get(s)),title:r.data[e].fields[1].values.get(s),tags:[],text:r.data[e].fields[3].values.get(s)});return a})))}applyTemplateVariables(e,t){let{metricQuery:s,refId:r,queryType:a,sloQuery:i}=e;return{datasource:this.getRef(),refId:r,intervalMs:this.intervalMs,type:"timeSeriesQuery",queryType:a,metricQuery:Object.assign({},this.interpolateProps(s,t),{projectName:this.templateSrv.replace(s.projectName?s.projectName:this.getDefaultProject(),t),filters:this.interpolateFilters(s.filters||[],t),groupBys:this.interpolateGroupBys(s.groupBys||[],t),view:s.view||"FULL",editorMode:s.editorMode}),sloQuery:i&&this.interpolateProps(i,t)}}async getLabels(e,t,s,r){var a;const i={targets:[{refId:t,datasource:this.getRef(),queryType:R.xL.METRICS,metricQuery:{projectName:this.templateSrv.replace(s),metricType:this.templateSrv.replace(e),groupBys:this.interpolateGroupBys((null===r||void 0===r?void 0:r.groupBys)||[],{}),crossSeriesReducer:null!==(a=null===r||void 0===r?void 0:r.crossSeriesReducer)&&void 0!==a?a:"REDUCE_NONE",view:"HEADERS"}}],range:this.timeSrv.timeRange()},n=i.targets;return n.length?(0,A.n)((0,K.D)(this.ensureGCEDefaultProject()).pipe((0,$.z)(()=>(0,B.getBackendSrv)().fetch({url:"/api/ds/query",method:"POST",data:{from:i.range.from.valueOf().toString(),to:i.range.to.valueOf().toString(),queries:n}})),(0,I.U)(e=>{let{data:t}=e;const s=(0,B.toDataQueryResponse)({data:t}),r=null===s||void 0===s?void 0:s.data.map(e=>{var t,s;return null===(t=e.meta)||void 0===t?void 0:null===(s=t.custom)||void 0===s?void 0:s.labels}).filter(e=>!!e).reduce((e,t)=>{for(let s in t)e[s]||(e[s]=new Set),t[s]&&e[s].add(t[s]);return e},{});return Object.fromEntries(Object.entries(r).map(e=>(e[1]=Array.from(e[1]),e)))}))):(0,A.n)((0,k.of)({results:[]}))}async getGCEDefaultProject(){return this.getResource("gceDefaultProject")}getDefaultProject(){const{defaultProject:e,authenticationType:t,gceDefaultProject:s}=this.instanceSettings.jsonData;return"gce"===t?s||"":e||""}async ensureGCEDefaultProject(){const{authenticationType:e,gceDefaultProject:t}=this.instanceSettings.jsonData;"gce"!==e||t||(this.instanceSettings.jsonData.gceDefaultProject=await this.getGCEDefaultProject())}async getMetricTypes(e){return e?this.getResource(`metricDescriptors/v3/projects/${this.templateSrv.replace(e)}/metricDescriptors`):[]}async getSLOServices(e){return this.getResource(`services/v3/projects/${this.templateSrv.replace(e)}/services?pageSize=1000`)}async getServiceLevelObjectives(e,t){if(!t)return Promise.resolve([]);let{projectName:s,serviceId:r}=this.interpolateProps({projectName:e,serviceId:t});return this.getResource(`slo-services/v3/projects/${s}/services/${r}/serviceLevelObjectives`)}getProjects(){return this.getResource("projects")}migrateQuery(e){if(!e.hasOwnProperty("metricQuery")){const t=e,{hide:s,refId:r,intervalMs:a,type:i}=t,n=function(e,t){if(null==e)return{};var s,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)s=i[r],t.indexOf(s)>=0||(a[s]=e[s]);return a}(t,X);return{refId:r,intervalMs:a,type:i,hide:s,queryType:R.xL.METRICS,metricQuery:Object.assign({},n,{view:n.view||"FULL"})}}return e}interpolateProps(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Object.entries(e).reduce((e,s)=>{let[r,a]=s;return Object.assign({},e,{[r]:a&&(0,V.isString)(a)?this.templateSrv.replace(a,t):a})},{})}filterQuery(e){if(e.hide)return!1;if(e.queryType&&e.queryType===R.xL.SLO&&e.sloQuery){const{selectorName:t,serviceId:s,sloId:r,projectName:a}=e.sloQuery;return!!(t&&s&&r&&a)}if(e.queryType&&e.queryType===R.xL.METRICS&&e.metricQuery.editorMode===R.je.MQL)return!!e.metricQuery.projectName&&!!e.metricQuery.query;const{metricType:t}=e.metricQuery;return!!t}interpolateVariablesInQueries(e,t){return e.map(e=>this.applyTemplateVariables(this.migrateQuery(e),t))}interpolateFilters(e,t){const s=(0,V.chunk)(e,4).map(e=>{let[t,s,r,a]=e;return Object.assign({key:t,operator:s,value:r},a&&{condition:a})}).filter(e=>e.value);return(0,V.flatten)(s.map(e=>{let{key:s,operator:r,value:a,condition:i}=e;return[this.templateSrv.replace(s,t||{}),r,this.templateSrv.replace(a,t||{},e=>(0,V.isArray)(e)&&e.length?`(${e.join("|")})`:e),...i?[i]:[]]}))||[]}interpolateGroupBys(e,t){let s=[];return(e||[]).forEach(e=>{const r=this.templateSrv.replace(e,t||{},"csv").split(",");Array.isArray(r)?s=s.concat(r):s.push(r)}),s}}).setQueryEditorHelp(class extends C.PureComponent{render(){return(0,w.jsxs)("div",{children:[i||(i=(0,w.jsx)("h2",{children:"Cloud Monitoring alias patterns"})),(0,w.jsxs)("div",{children:[n||(n=(0,w.jsx)("p",{children:"Format the legend keys any way you want by using alias patterns. Format the legend keys any way you want by using alias patterns."})),"Example:",c||(c=(0,w.jsx)("code",{children:"{{metric.name}} - {{metric.label.instance_name}}"})),l||(l=(0,w.jsx)("br",{})),"Result:   ",o||(o=(0,w.jsx)("code",{children:"cpu/usage_time - server1-europe-west-1"})),u||(u=(0,w.jsx)("br",{})),p||(p=(0,w.jsx)("br",{})),d||(d=(0,w.jsx)("label",{children:"Patterns"})),h||(h=(0,w.jsx)("br",{})),(0,w.jsxs)("ul",{className:O.css`
              list-style: none;
            `,children:[y||(y=(0,w.jsxs)("li",{children:[(0,w.jsx)("code",{children:"{{metric.type}}"})," = metric type e.g. compute.googleapis.com/instance/cpu/usage_time"]})),m||(m=(0,w.jsxs)("li",{children:[(0,w.jsx)("code",{children:"{{metric.name}}"})," = name part of metric e.g. instance/cpu/usage_time"]})),g||(g=(0,w.jsxs)("li",{children:[(0,w.jsx)("code",{children:"{{metric.service}}"})," = service part of metric e.g. compute"]})),v||(v=(0,w.jsxs)("li",{children:[(0,w.jsx)("code",{children:"{{metric.label.label_name}}"})," = Metric label metadata e.g. metric.label.instance_name"]})),j||(j=(0,w.jsxs)("li",{children:[(0,w.jsx)("code",{children:"{{resource.label.label_name}}"})," = Resource label metadata e.g. resource.label.zone"]})),b||(b=(0,w.jsxs)("li",{children:[(0,w.jsx)("code",{children:"{{metadata.system_labels.name}}"})," = Meta data system labels e.g. metadata.system_labels.name. For this to work, the needs to be included in the group by"]})),S||(S=(0,w.jsxs)("li",{children:[(0,w.jsx)("code",{children:"{{metadata.user_labels.name}}"})," = Meta data user labels e.g. metadata.user_labels.name. For this to work, the needs to be included in the group by"]})),f||(f=(0,w.jsxs)("li",{children:[(0,w.jsx)("code",{children:"{{bucket}}"})," = bucket boundary for distribution metrics when using a heatmap in Grafana"]})),T||(T=(0,w.jsxs)("li",{children:[(0,w.jsx)("code",{children:"{{project}}"})," = The project name that was specified in the query editor"]})),x||(x=(0,w.jsxs)("li",{children:[(0,w.jsx)("code",{children:"{{service}}"})," = The service id that was specified in the SLO query editor"]})),Q||(Q=(0,w.jsxs)("li",{children:[(0,w.jsx)("code",{children:"{{slo}}"})," = The SLO id that was specified in the SLO query editor"]})),L||(L=(0,w.jsxs)("li",{children:[(0,w.jsx)("code",{children:"{{selector}}"})," = The Selector function that was specified in the SLO query editor"]}))]})]})]})}}).setQueryEditor(N.W).setConfigEditor(class extends C.PureComponent{render(){return(0,w.jsx)(w.Fragment,{children:(0,w.jsx)(M.ConnectionConfig,Object.assign({},this.props))})}}).setAnnotationQueryCtrl(a).setVariableQueryEditor(E)}}]);