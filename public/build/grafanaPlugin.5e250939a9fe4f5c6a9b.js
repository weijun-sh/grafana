"use strict";(self.webpackChunkgrafana=self.webpackChunkgrafana||[]).push([[7537],{"./public/app/plugins/datasource/grafana/module.ts":(e,a,t)=>{t.r(a),t.d(a,{plugin:()=>A});var n,s,r=t("./packages/grafana-data/src/index.ts"),l=t("./.yarn/cache/react-npm-17.0.2-99ba37d931-b254cc17ce.zip/node_modules/react/index.js"),i=t("./packages/grafana-runtime/src/index.ts"),o=t("./packages/grafana-ui/src/index.ts"),c=t("./public/app/plugins/datasource/grafana/types.ts"),d=t("./.yarn/cache/react-npm-17.0.2-99ba37d931-b254cc17ce.zip/node_modules/react/jsx-runtime.js");function u(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}class h extends l.PureComponent{constructor(e){super(e),u(this,"state",{channels:[],channelFields:{}}),u(this,"queryTypes",[{label:"Random Walk",value:c.hR.RandomWalk,description:"Random signal within the selected time range"},{label:"Live Measurements",value:c.hR.LiveMeasurements,description:"Stream real-time measurements from Grafana"},{label:"List public files",value:c.hR.List,description:"Show directory listings for public resources"}]),u(this,"onQueryTypeChange",(e=>{const{onChange:a,query:t,onRunQuery:n}=this.props;a(Object.assign({},t,{queryType:e.value})),n(),this.loadChannelInfo()})),u(this,"onChannelChange",(e=>{const{onChange:a,query:t,onRunQuery:n}=this.props;a(Object.assign({},t,{channel:null==e?void 0:e.value})),n()})),u(this,"onFieldNamesChange",(e=>{var a,t;const{onChange:n,query:s,onRunQuery:r}=this.props;let l=[];if(Array.isArray(e)?l=e.map((e=>e.value)):e.value&&(l=[e.value]),1===l.length&&(null===(a=s.filter)||void 0===a||null===(t=a.fields)||void 0===t||!t.length)&&s.channel){var i;const e=(null!==(i=this.state.channelFields[s.channel])&&void 0!==i?i:[]).find((e=>"time"===e.value||"Time"===e.value));e&&e.value&&e.value!==l[0]&&(l=[e.value,...l])}n(Object.assign({},s,{filter:Object.assign({},s.filter,{fields:l})})),r()})),u(this,"checkAndUpdateValue",((e,a)=>{const{onChange:t,query:n,onRunQuery:s}=this.props;if("buffer"===e){let e;if(a)try{e=1e3*r.rangeUtil.intervalToSeconds(a)}catch(e){console.warn("ERROR",e)}t(Object.assign({},n,{buffer:e}))}else t(Object.assign({},n,{[e]:a}));s()})),u(this,"handleEnterKey",(e=>{"Enter"===e.key&&this.checkAndUpdateValue("buffer",e.target.value)})),u(this,"handleBlur",(e=>{this.checkAndUpdateValue("buffer",e.target.value)})),u(this,"onFolderChanged",(e=>{const{onChange:a,query:t,onRunQuery:n}=this.props;a(Object.assign({},t,{path:null==e?void 0:e.value})),n()})),u(this,"handleSearchEnterKey",(e=>{"Enter"===e.key&&this.checkAndUpdateValue("query",e.target.value)})),u(this,"handleSearchBlur",(e=>{this.checkAndUpdateValue("query",e.target.value)})),u(this,"onSaveSearchJSON",(e=>{try{const a=JSON.parse(e);a.queryType=c.hR.Search,this.props.onChange(a),this.props.onRunQuery()}catch(a){console.log("UNABLE TO parse search",e,a)}})),i.config.featureToggles.panelTitleSearch&&this.queryTypes.push({label:"Search",value:c.hR.Search,description:"Search for grafana resources"})}loadChannelInfo(){(0,i.getBackendSrv)().fetch({url:"api/live/list"}).subscribe({next:e=>{var a;const t=null===(a=e.data)||void 0===a?void 0:a.channels;if(null!=t&&t.length){const e={},a=t.map((a=>{if(a.data){const t=new Set,n=(0,r.dataFrameFromJSON)(a.data);for(const e of n.fields)t.add(e.name);e[a.channel]=Array.from(t).map((e=>({value:e,label:e})))}return{value:a.channel,label:a.channel+" ["+a.minute_rate+" msg/min]"}}));this.setState({channelFields:e,channels:a})}}})}loadFolderInfo(){const e={targets:[{queryType:c.hR.List,refId:"A"}]};(0,i.getDataSourceSrv)().get("-- Grafana --").then((a=>{a.query(e).subscribe({next:e=>{if(e.data.length){const a=e.data[0].fields[0].values.toArray().map((e=>({value:e,label:e})));this.setState({folders:a})}}})}))}componentDidMount(){this.loadChannelInfo()}renderMeasurementsQuery(){var e;let{channel:a,filter:t,buffer:s}=this.props.query,{channels:l,channelFields:i}=this.state,c=l.find((e=>e.value===a));a&&!c&&(c={value:a,label:a,description:`Connected to ${a}`},l=[c,...l]);const u=new Set,h=a&&null!==(e=i[a])&&void 0!==e?e:[];if(null!=t&&t.fields)for(const e of t.fields)u.has(e)||(h.push({value:e,label:`${e} (not loaded)`,description:"Configured, but not found in the query results"}),u.add(e));let p="";return s&&(p=r.rangeUtil.secondsToHms(s/1e3)),(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("div",{className:"gf-form",children:(0,d.jsx)(o.InlineField,{label:"Channel",grow:!0,labelWidth:12,children:(0,d.jsx)(o.Select,{options:l,value:c||"",onChange:this.onChannelChange,allowCustomValue:!0,backspaceRemovesValue:!0,placeholder:"Select measurements channel",isClearable:!0,noOptionsMessage:"Enter channel name",formatCreateLabel:e=>`Connect to: ${e}`})})}),a&&(0,d.jsxs)("div",{className:"gf-form",children:[(0,d.jsx)(o.InlineField,{label:"Fields",grow:!0,labelWidth:12,children:(0,d.jsx)(o.Select,{options:h,value:(null==t?void 0:t.fields)||[],onChange:this.onFieldNamesChange,allowCustomValue:!0,backspaceRemovesValue:!0,placeholder:"All fields",isClearable:!0,noOptionsMessage:"Unable to list all fields",formatCreateLabel:e=>`Field: ${e}`,isSearchable:!0,isMulti:!0})}),(0,d.jsx)(o.InlineField,{label:"Buffer",children:(0,d.jsx)(o.Input,{placeholder:"Auto",width:12,defaultValue:p,onKeyDown:this.handleEnterKey,onBlur:this.handleBlur,spellCheck:!1})})]}),n||(n=(0,d.jsx)(o.Alert,{title:"Grafana Live - Measurements",severity:"info",children:"This supports real-time event streams in Grafana core. This feature is under heavy development. Expect the interfaces and structures to change as this becomes more production ready."}))]})}renderListPublicFiles(){let{path:e}=this.props.query,{folders:a}=this.state;a||(a=[],this.loadFolderInfo());const t=a.find((a=>a.value===e));return e&&!t&&(a=[...a,{value:e,label:e}]),(0,d.jsx)(o.InlineFieldRow,{children:(0,d.jsx)(o.InlineField,{label:"Path",grow:!0,labelWidth:12,children:(0,d.jsx)(o.Select,{options:a,value:t||"",onChange:this.onFolderChanged,allowCustomValue:!0,backspaceRemovesValue:!0,placeholder:"Select folder",isClearable:!0,formatCreateLabel:e=>`Folder: ${e}`})})})}renderSearch(){var e,a;let t=null!==(e=this.props.query)&&void 0!==e?e:{};const n={query:"*",location:"",ds_uid:"",sort:"score desc",tags:[],kind:["dashboard","folder"],uid:[],id:[],explain:!0,accessInfo:!0,facet:[{field:"kind"},{field:"tag"},{field:"location"}],hasPreview:"dark",from:0,limit:20},r=JSON.stringify(null!=t?t:{},null,2);for(const[e,a]of Object.entries(n))null==t[e]&&(t[e]=a);return(0,d.jsxs)(d.Fragment,{children:[s||(s=(0,d.jsx)(o.Alert,{title:"Grafana Search",severity:"info",children:"This interface to the grafana search API is experimental, and subject to change at any time without notice"})),(0,d.jsx)(o.InlineFieldRow,{children:(0,d.jsx)(o.InlineField,{label:"Query",grow:!0,labelWidth:12,children:(0,d.jsx)(o.Input,{placeholder:"Everything",defaultValue:null!==(a=t.query)&&void 0!==a?a:"",onKeyDown:this.handleSearchEnterKey,onBlur:this.handleSearchBlur,spellCheck:!1})})}),(0,d.jsx)(o.CodeEditor,{height:300,language:"json",value:r,onBlur:this.onSaveSearchJSON,onSave:this.onSaveSearchJSON,showMiniMap:!0,showLineNumbers:!0})]})}render(){const e=Object.assign({},c.wi,this.props.query);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(o.InlineFieldRow,{children:(0,d.jsx)(o.InlineField,{label:"Query type",grow:!0,labelWidth:12,children:(0,d.jsx)(o.Select,{options:this.queryTypes,value:this.queryTypes.find((a=>a.value===e.queryType))||this.queryTypes[0],onChange:this.onQueryTypeChange})})}),e.queryType===c.hR.LiveMeasurements&&this.renderMeasurementsQuery(),e.queryType===c.hR.List&&this.renderListPublicFiles(),e.queryType===c.hR.Search&&this.renderSearch()]})}}var p=t("./.yarn/cache/lodash-npm-4.17.21-6382451519-eb835a2e51.zip/node_modules/lodash/lodash.js"),f=t("./.yarn/cache/rxjs-npm-7.5.5-d0546b1ccb-e034f60805.zip/node_modules/rxjs/dist/esm5/internal/observable/from.js"),g=t("./.yarn/cache/rxjs-npm-7.5.5-d0546b1ccb-e034f60805.zip/node_modules/rxjs/dist/esm5/internal/observable/merge.js"),m=t("./.yarn/cache/rxjs-npm-7.5.5-d0546b1ccb-e034f60805.zip/node_modules/rxjs/dist/esm5/internal/observable/of.js"),y=t("./.yarn/cache/rxjs-npm-7.5.5-d0546b1ccb-e034f60805.zip/node_modules/rxjs/dist/esm5/internal/operators/map.js"),b=t("./public/app/features/dashboard/state/DashboardMigrator.ts"),v=t("./public/app/features/dashboard/services/DashboardSrv.ts"),j=t("./.yarn/__virtual__/@emotion-css-virtual-72c314ddb1/0/cache/@emotion-css-npm-11.7.1-25ff8755a7-ac1f56656f.zip/node_modules/@emotion/css/dist/emotion-css.esm.js"),x=t("./public/app/core/components/TagFilter/TagFilter.tsx"),S=t("./public/app/features/annotations/api.ts");const C=(0,d.jsx)("div",{children:"Specify a list of tags to match. To specify a key and value tag use `key:value` syntax."}),w=[{label:"Dashboard",value:c._$.Dashboard,description:"Query for events created on this dashboard and show them in the panels where they where created"},{label:"Tags",value:c._$.Tags,description:"This will fetch any annotation events that match the tags filter"}],F=[10,50,100,200,300,500,1e3,2e3].map((e=>({label:String(e),value:e})));function T(e){let{query:a,onChange:t}=e;const n=a,{limit:s,matchAny:r,tags:l,type:i}=n,u=q();return(0,d.jsxs)(o.FieldSet,{className:u.container,children:[(0,d.jsx)(o.Field,{label:"Filter by",children:(0,d.jsx)(o.Select,{inputId:"grafana-annotations__filter-by",options:w,value:i,onChange:e=>t(Object.assign({},n,{type:e.value}))})}),(0,d.jsx)(o.Field,{label:"Max limit",children:(0,d.jsx)(o.Select,{inputId:"grafana-annotations__limit",width:16,options:F,value:s,onChange:e=>t(Object.assign({},n,{limit:e.value}))})}),i===c._$.Tags&&(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(o.Field,{label:"Match any",description:"Enabling this returns annotations that match any of the tags specified below",children:(0,d.jsx)(o.Switch,{id:"grafana-annotations__match-any",value:r,onChange:e=>t(Object.assign({},n,{matchAny:e.target.checked}))})}),(0,d.jsx)(o.Field,{label:"Tags",description:C,children:(0,d.jsx)(x.D,{allowCustomValue:!0,formatCreateLabel:e=>`Use custom value: ${e}`,inputId:"grafana-annotations__tags",onChange:e=>t(Object.assign({},n,{tags:e})),tagOptions:S.lK,tags:null!=l?l:[]})})]})]})}const q=()=>({container:j.css`
      max-width: 600px;
    `});let R=100;class k extends i.DataSourceWithBackend{constructor(e){super(e),this.annotations={QueryEditor:T,prepareAnnotation(e){var a,t,n,s,r;return e.target=null!==(a=e.target)&&void 0!==a?a:{type:null!==(t=e.type)&&void 0!==t?t:c._$.Dashboard,limit:null!==(n=e.limit)&&void 0!==n?n:100,tags:null!==(s=e.tags)&&void 0!==s?s:[],matchAny:null!==(r=e.matchAny)&&void 0!==r&&r},e},prepareQuery(e){let a;if((0,p.isString)(e.datasource)){const t=(0,b.p)(e.datasource,{returnDefaultAsNull:!1});t&&(a=t)}else a=e.datasource;return Object.assign({},e,{refId:e.name,queryType:c.hR.Annotations,datasource:a})}}}query(e){const a=[],t=[],n=(0,i.getTemplateSrv)();for(const o of e.targets){if(o.queryType===c.hR.Annotations)return(0,f.D)(this.getAnnotations({range:e.range,rangeRaw:e.range.raw,annotation:o,dashboard:(0,v.h4)().getCurrent()}));if(!o.hide)if(o.queryType===c.hR.LiveMeasurements){var s,l;let t=n.replace(o.channel,e.scopedVars);const{filter:c}=o;t&&t.startsWith("telegraf/")&&(t="stream/"+t,o.channel=t);const d=(0,r.parseLiveChannelAddress)(t);if(!(0,r.isValidLiveChannelAddress)(d))continue;const u={maxLength:null!==(s=e.maxDataPoints)&&void 0!==s?s:500};o.buffer?(u.maxDelta=o.buffer,u.maxLength=2*u.maxLength):"now"===(null===(l=e.rangeRaw)||void 0===l?void 0:l.to)&&(u.maxDelta=e.range.to.valueOf()-e.range.from.valueOf()),a.push((0,i.getGrafanaLiveSrv)().getDataStream({key:`${e.requestId}.${R++}`,addr:d,filter:c,buffer:u}))}else o.queryType||(o.queryType=c.hR.RandomWalk),t.push(o)}return t.length&&a.push(super.query(Object.assign({},e,{targets:t}))),a.length?1===a.length?a[0]:(0,g.T)(...a):(0,m.of)()}listFiles(e){return this.query({targets:[{refId:"A",queryType:c.hR.List,path:e}]}).pipe((0,y.U)((e=>{var a;const t=null!==(a=e.data[0])&&void 0!==a?a:new r.MutableDataFrame;return new r.DataFrameView(t)})))}metricFindQuery(e){return Promise.resolve([])}async getAnnotations(e){var a;const t=(0,i.getTemplateSrv)(),n=e.annotation,s=n.target,l={from:e.range.from.valueOf(),to:e.range.to.valueOf(),limit:s.limit,tags:s.tags,matchAny:s.matchAny};if(s.type===c._$.Dashboard){if(!e.dashboard.id)return Promise.resolve({data:[]});l.dashboardId=e.dashboard.id,delete l.tags}else{if(!Array.isArray(s.tags)||0===s.tags.length)return Promise.resolve({data:[]});const e="__delimiter__",a=[];for(const n of l.tags){const s=t.replace(n,{},(a=>"string"==typeof a?a:a.join(e)));for(const t of s.split(e))a.push(t)}l.tags=a}const o=await(0,i.getBackendSrv)().get("/api/annotations",l,`grafana-data-source-annotations-${n.name}-${null===(a=e.dashboard)||void 0===a?void 0:a.id}`);return{data:[(0,r.toDataFrame)(o)]}}testDatasource(){return Promise.resolve()}}const A=new r.DataSourcePlugin(k).setQueryEditor(h)},"./public/app/plugins/datasource/grafana/types.ts":(e,a,t)=>{let n;t.d(a,{_$:()=>r,hR:()=>n,wi:()=>s}),function(e){e.LiveMeasurements="measurements",e.Annotations="annotations",e.RandomWalk="randomWalk",e.List="list",e.Read="read",e.Search="search"}(n||(n={}));const s={refId:"A",queryType:n.RandomWalk};let r;!function(e){e.Dashboard="dashboard",e.Tags="tags"}(r||(r={}))}}]);